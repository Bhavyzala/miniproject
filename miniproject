#include<stdio.h>
#include<stdlib.h>
//function to add matrices
void add(int a[3][3],int b[3][3],int result[3][3])
{
printf("Enter the elments of Matrix A: \n");
for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
printf("Enter the elements of Matrix B: \n");
for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            scanf("%d",&b[i][j]);
        }
    }
printf("Given Matrix A: \n");
for(int i=0;i<3;i++)
    {
    for(int j=0;j<3;j++)
        {
        printf("%d\t",a[i][j]);
        }
    printf("\n");
    }
printf("Given Matrix B: \n");
for(int i=0;i<3;i++)
    {
    for(int j=0;j<3;j++)
        {
        printf("%d\t",b[i][j]);
        }
    printf("\n");
    }

for(int i=0;i<3;i++)
    {
            for(int j=0;j<3;j++)
        {
            result[i][j]=a[i][j]+b[i][j];
        }
    }
}
//function to subtract matrices
void subtract(int a[3][3],int b[3][3],int result[3][3])
{
printf("Enter the Elements of Matrix A: \n");
for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
printf(" Enter the Elements of Matrix B: \n");
for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            scanf("%d",&b[i][j]);
        }
    }
printf("Given Matrix A: \n");
for(int i=0;i<3;i++)
    {
    for(int j=0;j<3;j++)
        {
        printf("%d\t",a[i][j]);
        }
    printf("\n");
    }
printf("Given Matrix B: \n");
for(int i=0;i<3;i++)
    {
    for(int j=0;j<3;j++)
        {
        printf("%d\t",b[i][j]);
        }
    printf("\n");
    }

for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            result[i][j]=a[i][j]-b[i][j];
        }
    }

}
//function to multiply matrices
void multiply(int a[3][3],int b[3][3],int result[3][3])
{
printf(" Enter the elements of Matrix A: \n");
for(int i=0;i<3;i++)
{
    for(int j=0;j<3;j++)
    {
        scanf("%d",&a[i][j]);
    }
}
printf("Enter the elements of Matrix B: \n");
for(int i=0;i<3;i++)
{
    for(int j=0;j<3;j++)
    {
        scanf("%d",&b[i][j]);
    }
}
printf("Given Matrix A: \n");
for(int i=0;i<3;i++)
    {
    for(int j=0;j<3;j++)
        {
        printf("%d\t",a[i][j]);
        }
    printf("\n");
    }
printf("Given Matrix B: \n");
for(int i=0;i<3;i++)
    {
    for(int j=0;j<3;j++)
        {
        printf("%d\t",b[i][j]);
        }
    printf("\n");
    }

for(int i=0;i<3;i++)
    {
    for(int j=0;j<3;j++)
        {
        result[i][j]=0;
        }
    }

for(int i=0;i<3;i++)
    {
    for(int j=0;j<3;j++)
        {
            for(int k=0;k<3;k++)
            {
                result[i][j]+=a[i][k]*b[k][j];
            }
        }

    }
}

// function of inverse of the matrix
void  inverse(int a[3][3],int result[3][3])
{

  int i,j;
  float determinant=0;

  printf("Enter the elements of matrix A: \n");
  for(int i=0;i<3;i++)
      for(int j=0;j<3;j++)
           scanf("%d",&a[i][j]);

 printf("\nThe matrix is\n");
for(i=0;i<3;i++)
{
      printf("\n");
     for(j=0;j<3;j++)
     {
         printf("%d\t",a[i][j]);
     }

}
  for(int i=0;i<3;i++)
      determinant= a[0][0]*((a[1][1]*a[2][2]) - (a[2][1]*a[1][2])) - a[0][1]*((a[1][0]*a[2][2]) - (a[2][0]*a[1][2])) + a[0][2]*((a[1][0]*a[2][1]) - (a[2][0]*a[1][1]));
      printf("\nThe Value of Determinant is: %f ",determinant);
if(determinant==0)
{
    printf("\n Inverse of the matrix is not possible as the value of determinant is zero \n");
}
else
   {
       printf("\n Inverse of the matrix is posiible as the value of determinant is non zero \n");
       printf("\nInverse of matrix is: \n\n");
        for(i=0;i<3;i++)
        {
        for(j=0;j<3;j++)
           printf("%f\t",(((a[(j+1)%3][(i+1)%3] * a[(j+2)%3][(i+2)%3]) - (a[(j+1)%3][(i+2)%3]*a[(j+2)%3][(i+1)%3]))/ determinant));
        printf("\n");

        }
   }
}
//function to find determinant
int det(int a[3][3],int det )
{
    printf("Enter the elements of Matrix A: \n");
for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("Given Matrix A: \n");
for(int i=0;i<3;i++)
    {
    for(int j=0;j<3;j++)
        {
        printf("%d\t",a[i][j]);
        }
    printf("\n");
    }

{

int det=a[0][0]*((a[1][1]*a[2][2]) - (a[2][1]*a[1][2])) - a[0][1]*((a[1][0]*a[2][2]) - (a[2][0]*a[1][2])) + a[0][2]*((a[1][0]*a[2][1]) - (a[2][0]*a[1][1]));

printf("the value of determinant is: %d",det);
}
}

//function to transpose matrix

void transpose(int a[3][3],int result[3][3])
{
printf("Enter the elements of Matrix A: \n");
for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("Given Matrix A: \n");
for(int i=0;i<3;i++)
    {
    for(int j=0;j<3;j++)
        {
        printf("%d\t",a[i][j]);
        }
    printf("\n");
    }
for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            result[j][i]=a[i][j];
        }
    }
}
//function to compare matrices
int cmp(int a[3][3],int b[3][3]){

    int counter=0;
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
           if(a[i][j]==b[i][j]){
             counter++;
           }
        }
    }
    if(counter==9){
return 1;
    }else return 0;
}

//function to compare minus of transspose matrices
int minuscmp(int a[3][3],int b[3][3]){

    int counter=0;
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
           if(a[i][j]== -(b[i][j])){
             counter++;
           }
        }
    }
    if(counter==9){
return 1;
    }else return 0;
}

//function to display matrix

void display(int matrix[3][3])
{

    for(int i=0;i<3;i++)
    {
    for(int j=0;j<3;j++)
        {
        printf("%d\t",matrix[i][j]);
        }
    printf("\n");
    }

}
int main(){

int a[3][3];
int b[3][3];
int c[3][3];

printf("\n NIRMA UNIVERSITY \n INSTITUTE OF TECHNOLOGY \n INNOVATIVE ASSIGNMENT \n 2CS101 COMPUTER PROGRAMMING \n ");
printf("____________________________________________________________\n");
printf("your matrix operations are :\n");
printf("1. Addition\n");
printf("2. Subtraction\n");
printf("3. Multiplication\n");
printf("4. Inverse\n");
printf("5. Determinant\n");
printf("6. Transpose\n");
printf("7. Check whether the given matrix is Symmetric or not\n");
printf("8. Check whether the given matrix is Skew-Symmetric or not\n");
// printf("9. Sorting matrix");
printf("____________________________________________________________\n");


int choice;
printf("Enter your choice:");
    scanf("%d",&choice);
  if(choice<7)
    {
       printf("Enter your matrix(ces):\n\n(Note: Enter the elements in the matrix Row-wise)\n\n");
    }
switch(choice){
    case 1:
    add(a, b, c);
    printf("Your addition matrix is :\n");
    display(c);
    break;

     case 2:
    subtract(a, b, c);
    printf("Your subtraction matrix is :\n");
    display(c);
    break;

     case 3:
    multiply(a, b, c);
    printf("Your mutliplied matrix is :\n");
    display(c);
    break;

     case 4:
    inverse(a,c);
    break;

    case 5:
     det(a,c);
    break;

    case 6:
    transpose(a,c);
    printf("Your transposed matrix is :\n");
    display(c);
    break;

    case 7:
     transpose(a,c);
     if(cmp(a,c)==1){
         printf("It is a symmetric matrix.");
      }else{
          printf("it is not a symmetric matrix.");
      }
    break;

    case 8:
     transpose(a,c);
     if(minuscmp(a,c)==1)
      {
         printf("It is a skew-symmetric matrix.");
      }
      else
      {
          printf("It is not a skew-symmetric matrix.");
      }
    break;

     default:
    printf("Invalid Input!!!");
}
    return 0;
}

